version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: petaverse-postgres
    environment:
      POSTGRES_DB: petaverse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - petaverse-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: petaverse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - petaverse-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: petaverse-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/petaverse
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      JWT_SECRET: your-secret-key-here-make-it-long-and-secure
      MAIL_USERNAME: your-email@gmail.com
      MAIL_PASSWORD: your-app-password
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - petaverse-network

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: petaverse-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - petaverse-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: petaverse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - petaverse-network

volumes:
  postgres_data:
  redis_data:

networks:
  petaverse-network:
    driver: bridge 